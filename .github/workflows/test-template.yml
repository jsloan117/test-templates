---
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/learn-github-actions/contexts

name: called workflow
run-name: run name of called workflow

on:
  workflow_call:
    # allow reuse of this workflow in other repos
    inputs:
      file:
        description: Dockerfile to build, relative to context path
        default: Dockerfile
        required: false
        type: string

      images:
        description: A list of the account/repo names for docker build to push to
        default: |
          ${{ github.repository }}
          ghcr.io/${{ github.repository }}
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  build:
    name: job name
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      # https://github.com/marketplace/actions/docker-metadata-action
      - name: Docker Metadata
        uses: docker/metadata-action@v5.0.0
        id: meta
        with:
          images: ${{ inputs.images }}
          # flavor: ${{ inputs.flavor }}
          # tags: ${{ inputs.tags }}

      - name: loop
        env:
          # DIGEST: ${{ steps.meta.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "${TAGS}@DIGEST"
          # echo ${{ inputs.file }}
          # echo "${{ inputs.images }}"
          # x="${{ inputs.images }}"
          # echo -e '\n\n\n'
          # echo "${x}" > images.txt
          # cat images.txt
          # file images.txt
          # wc -l images.txt
          # read -ra lines < images.txt
          # echo "${lines[@]}"
          # for x in "${lines[@]}"; do
          #   echo "${x}"
          # done
          # IFS=$'\n' read -d'' -a images <<< "${x}"
          # for image in "${images[@]}"; do
          #   echo "${image}"
          # done

