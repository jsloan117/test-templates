---
# container image security scan using Anchore

on:
  workflow_call:
    # allow reuse of this workflow in other repos
    inputs:
      image:
        description: A list of the account/repo names for docker build to push to
        default: ${{ github.repository }}
        required: false
        type: string

      sbom-file:
        description: sbom file to scan
        default: sbom.spdx.json
        required: false
        type: string

      # https://github.com/anchore/sbom-action?tab=readme-ov-file#anchoresbom-action
      sbom-snapshot-enable:
        description: Whether to upload the SBOM to the GitHub Dependency submission API
        default: false
        required: false
        type: boolean

      cosign-sign-enable:
        description: Enable cosign signing
        default: false
        required: false
        type: boolean

      cosign-verify-enable:
        description: Enable cosign verifying
        default: false
        required: false
        type: boolean

      cosign-upload-key:
        description: Enable cosign upload key
        default: false
        required: false
        type: boolean

    secrets:
      dockerhub-username:
        description: Docker Hub username
        required: false
      dockerhub-token:
        description: Docker Hub token
        required: false
      cosign-key:
        description: Cosign private key
        required: false
      cosign-password:
        description: Cosign private key password
        required: false

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions: {}
      # contents: read
      # packages: write
      # id-token: write

    steps:
      # https://github.com/marketplace/actions/download-a-build-artifact
      - uses: actions/download-artifact@v4
        id: dlsbom
        with:
          name: ${{ inputs.sbom-file }}

      - run: pwd; ls -lhR

      - name: Sign Image
        if: github.event_name != 'pull_request' && inputs.cosign-sign-enable
        run: |
          for img in $(jq -r '.tags[] | split(",";"") | .[]' <<< "${JSON}" | awk -F':' '{print $1}' | sort -u); do
            cosign sign -y --key env://COSIGN_KEY --recursive \
              -a "repo=${{ github.repository }}" \
              -a "workflow=${{ github.workflow }}" \
              -a "ref=${{ github.sha }}" \
              -a "ref=${{ github.ref_name }}" \
              ${img}@${DIGEST}
          done
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          JSON: ${{ steps.meta.outputs.json }}
          COSIGN_KEY: ${{ secrets.cosign-key }}
          COSIGN_PASSWORD: ${{ secrets.cosign-password }}

      - name: Verify Image
        if: github.event_name != 'pull_request' && inputs.cosign-verify-enable
        run: |
          printf '%s' "${COSIGN_PUBLIC_KEY}" > cosign.pub
          for img in $(jq -r '.tags[] | split(",";"") | .[]' <<< "${JSON}" | awk -F':' '{print $1}' | sort -u); do
            cosign verify --key env://COSIGN_PUBLIC_KEY ${img}@${DIGEST} | jq
          done
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          JSON: ${{ steps.meta.outputs.json }}
          COSIGN_PUBLIC_KEY: ${{ vars.COSIGN_PUB }}

      # https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload public key
        if: github.event_name != 'pull_request' && inputs.cosign-upload-key
        uses: actions/upload-artifact@v4
        with:
          name: cosign.pub
          path: cosign.pub
          if-no-files-found: warn

